/* =====================================================
 *
 * Towning.ntl , a Towning function call script, based on ETal 1.33WW
 *
 * Any original code is licensed under the BSD license
 * All code written since the fork of this is licensed under the GPL
 * Please see COPYING for details
 *
 * Copyright (c) 2014, Benson's Network Technolygy Company.
 * Copyright (c) 1976-2014 Benson's Network Technolygy Company.
 * All rights reserved.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Towning.ntl, 一個回城功能呼叫腳本, 根據 ETal 1.33WW 相容版本修訂
 *
 * 任何原代碼在BSD許可證下授權
 * 自本次寫的所有代碼以GPL許可
 * 請參閱COPYING的詳細信息
 *
 * 版權所有(c) 2014年, Benson's Network Technolygy Company.
 * 版權所有(c) 1976至2014 Benson's Network Technolygy Company.
 * 保留所有權利。
 *
 * 本程序是自由軟件：您可以重新分配和/或修改
 * 它根據GNU通用公共許可證的條款發表
 * 自由軟件基金會，無論是版本3的使用授權，或
 * (由你選擇) 任何更新的版本。
 *
 * 本程序分發的目的是希望它有用，
 * 但"沒有任何擔保"; 甚至沒有暗示的保證
 * 適銷性或針對特定用途。請參閱
 * GNU通用公共許可證以獲得更多細節。
 * 你應該已經收到一份GNU通用公共許可證的副本
 * 隨著這一計劃。如果不是，請參閱<http://www.gnu.org/licenses/>。
 *
===================================================== */

function Town_CheckStuff(Hpshort, Mpshort, TPshort, IDshort)
{
	if(Town_CheckHPs(Hpshort)) {
		Print(COLOR_1 + "\u4F60\u7684\u6CBB\u7642\u85E5\u5291\u5B58\u91CF\u4F4E!");
	}
	if(Town_CheckMPs(Mpshort)) {
		Print(COLOR_3 + "\u4F60\u7684\u6CD5\u529B\u85E5\u5291\u5B58\u91CF\u4F4E!");
	}
	if(Town_CheckScrolls(1) < TPshort) {
		Print(COLOR_4 + "\u4F60\u7684\u57CE\u93AE\u50B3\u9001\u6372\u8EF8\u5B58\u91CF\u4F4E!");
	}
	if(Town_CheckScrolls(0) < IDshort) {
		Print(COLOR_4 + "\u4F60\u7684\u8FA8\u8B58\u6372\u8EF8\u5B58\u91CF\u4F4E!");
	}
	return;
}

function Town_CheckHPs(numshort)
{
	var i;
	var _hppots = 0;
	var _items;
		_items = me.GetItems();
	for(i = 0 ; i < _items.length ; i++) {
		if(_items[i].mode == 2 && (_items[i].classid > 586 && _items[i].classid < 592)) {
			_hppots++;
		}
	}
	if(_hppots < numshort)
		return true;
	else
		return false;
}

function Town_CheckMPs(numshort)
{
	var i;
	var _mppots = 0;
	var _items;
		_items = me.GetItems();
	for(i = 0 ; i < _items.length ; i++) {
		if(_items[i].mode == 2 && (_items[i].classid > 591 && _items[i].classid < 597)) {
			_mppots++;
		}
	}
	if(_mppots < numshort)
		return true;
	else
		return false;
}

function Town_GetNeededPotionsColInt(type, column)
{
	var _restartloop = true;
	var _amountneeded = 0;
	var _items;

	if(!type || column > 3)
		return false;

	if(_NTT_BeltSize < 1)
		_NTT_BeltSize = NTC_GetBeltSize();

	potionloop:
	do {
		_amountneeded = _NTT_BeltSize;
		_items = me.GetItems();
		if(!_items)
			continue potionloop;
		for(i = 0 ; i < _items.length ; i++) {
			if(_items[i].mode == 2) {
				if(NTT_PotInRightColInt(_items[i].x, column, _NTT_BeltSize)) {
					var _potcode = _items[i].code;
					if(_potcode.indexOf(type) != -1)
						_amountneeded--;
					else {
						if(_potcode.indexOf("rv") != -1) {
							if(_items[i].x < 4) {
								return 0;
							}
							else
								_amountneeded--;
						}
						else {
							SetUIState(0x1F, true);
							me.ClickItem(1, _items[i]);
							NTC_PingDelay(500);
							continue potionloop;
						}
					}
				}
			}
		}
		_restartloop = false;
	} while(_restartloop);
	return _amountneeded;
}

function Town_CheckScrolls(scrolltype)
{
	var _tome = NTT_GetTome(scrolltype);
	if(_tome)
		return _tome.GetStat(70);

	return 0;
}
